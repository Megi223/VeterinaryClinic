@model VeterinaryClinic.Web.ViewModels.ChatMessages.ChatPageViewModel
@{
    this.ViewData["Title"] = "Chat";

}

@using System.Security.Claims;

<link href="https://maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css" rel="stylesheet">
<link rel='stylesheet' href='~/css/chat.css'>

<br />

<div class="container">
    <div class="row">
        @if (User.IsInRole(VeterinaryClinic.Common.GlobalConstants.OwnerRoleName))
        {
            <input id="userId" name="userId" value="@Model.VetUserId" hidden>
            <input id="callerId" name="callerId" value="@Model.OwnerUserId" hidden>

        }
        @if (User.IsInRole(VeterinaryClinic.Common.GlobalConstants.VetRoleName))
        {
            <input id="userId" name="userId" value="@Model.OwnerUserId" hidden>
            <input id="callerId" name="callerId" value="@Model.VetUserId" hidden>
        }
        <div class="col-sm-12">
            <div class="panel panel-white border-top-green">
                <div class="panel-body chat">
                    <div class="row chat-wrapper">
                        <div class="col-md-4">
                            <div class="compose-area">
                                <a class="btn btn-default" style="cursor:text;color:black"><i class="fa fa-edit"></i> Latest Messages</a>
                            </div>

                            <div>
                                <div class="slimScrollDiv" style="position: relative; overflow: hidden; width: auto; height: 550px;">
                                    <div class="chat-list-wrapper" style="overflow-y: auto; width: auto; height: 550px;">
                                        <ul class="chat-list">
                                            
                                            <vc:messages user-id="@this.User.FindFirst(ClaimTypes.NameIdentifier).Value"></vc:messages>
                                        </ul>
                                    </div><div class="slimScrollBar" style="width: 7px; position: absolute; top: 0px; opacity: 0.4; display: none; border-radius: 7px; z-index: 99; right: 1px; height: 478.639px; background: rgb(0, 0, 0);"></div><div class="slimScrollRail" style="width: 7px; height: 100%; position: absolute; top: 0px; display: none; border-radius: 7px; opacity: 0.2; z-index: 90; right: 1px; background: rgb(51, 51, 51);"></div>
                                </div>
                            </div>

                        </div>

                        <div class="col-md-8">
                            <div>
                                <div class="slimScrollDiv" style="position: relative; overflow: hidden; width: auto; height: 452px;">
                                    <div class="message-list-wrapper" style="overflow:scroll; width: auto; height: 452px;">
                                        <ul class="message-list">
                                            <li class="text-center" style="background: linear-gradient(45deg, #207dff 0%, #00bd55 100%);">
                                                @if (User.IsInRole(VeterinaryClinic.Common.GlobalConstants.OwnerRoleName))
                                                {
                                                    <h4 style="color:white"><b>@Model.VetFullName</b></h4>
                                                }
                                                @if (User.IsInRole(VeterinaryClinic.Common.GlobalConstants.VetRoleName))
                                                {
                                                    <h4 style="color:white"><b>@Model.OwnerFullName</b></h4>
                                                }

                                            </li>
                                            
                                        </ul>
                                    </div><div class="slimScrollBar" style="width: 7px; position: absolute; top: 265px; opacity: 0.4; display: none; border-radius: 7px; z-index: 99; right: 1px; height: 187.092px; background: rgb(0, 0, 0);"></div><div class="slimScrollRail" style="width: 7px; height: 100%; position: absolute; top: 0px; display: none; border-radius: 7px; opacity: 0.2; z-index: 90; right: 1px; background: rgb(51, 51, 51);"></div>
                                </div>

                                <div class="compose-box">
                                    <div class="row">
                                        <div class="col-xs-12 mg-btm-10">
                                            <textarea id="message" class="form-control input-sm" placeholder="Type your message here..."></textarea>
                                        </div>

                                        <div class="col-xs-4">
                                            <button id="sent" type="button" class="btn btn-green btn-sm pull-right">
                                                Send
                                            </button>
                                        </div>
                                    </div>
                                </div>

                            </div>

                        </div>
                    </div>

                </div>
            </div>
        </div>

    </div>
</div>


<br />

<form method="post" id="antiForgeryForm"></form>

@section Scripts{

    <script src="~/lib/signalr/dist/browser/signalr.min.js"></script>
    <script src="~/lib/signalr/dist/browser/signalr.min.js.map"></script>
 
    <script>
        function SaveMessage(messageInput) {
            let inputModel = JSON.stringify({
                CallerId: $('#callerId').val(),
                UserId: $('#userId').val(),
                Message: messageInput
            });
            console.log(inputModel.CallerId);
            console.log(inputModel.UserId);
            console.log(inputModel.Message);

            var antiForgeryToken = $('#antiForgeryForm input[name=__RequestVerificationToken]').val();
            $.ajax({
                type: "POST",
                url: "/api/Messages",
                contentType: "application/json",
                headers: { "X-CSRF-TOKEN": antiForgeryToken },
                data: inputModel,
                dataType: "json",
                success: function (data) {
                }
            });
        }
        
        var connection =
            new signalR.HubConnectionBuilder()
                .withUrl("/chat")
                .build();

        connection.on("RecieveMessage", function (message, profilePictureUrl,name) {
            var message = `<li class="left">
                                                <span class="username">${name}</span>

                                                <span class="avatar tooltips" data-toggle="tooltip " data-placement="left" data-original-title="Kevin Mckoy">
                                                    <img src="${profilePictureUrl}" alt="avatar" class="img-circle">
                                                </span>
                                                <div class="body">
                                                    <div class="message well well-sm" style="line-height:40px;padding-left:20px;padding-right:20px">
                                                        ${message}
                                                    </div>
                                                    <div class="clearfix"></div>

                                                </div>
                                            </li>`
            $(".message-list").append(message);
            $('.message-list-wrapper').scrollTop($('.message-list-wrapper')[0].scrollHeight - $('.message-list-wrapper')[0].clientHeight);
        });
        connection.on("SendMessage", function (message, caller, name) {
            var messageContent = message;
           var message = `<li class="right">
                                                <span class="username">${name}</span>

                                                <span class="avatar tooltips" data-toggle="tooltip " data-placement="left" data-original-title="Kevin Mckoy">
                                                    <img src="${caller}" alt="avatar" class="img-circle">
                                                </span>
                                                <div class="body">
                                                    <div class="message well well-sm" style="line-height:40px;padding-left:20px;padding-right:20px">
                                                        ${message}
                                                    </div>
                                                    <div class="clearfix"></div>

                                                </div>
                                            </li>`

            $(".message-list").append(message);
            $('.message-list-wrapper').scrollTop($('.message-list-wrapper')[0].scrollHeight - $('.message-list-wrapper')[0].clientHeight);
            
            SaveMessage(messageContent);
        });
       
        $("#sent").click(function () {
            var message = $("#message").val();
            var userId = $("#userId").val();
            var callerId = "@this.User.FindFirst(ClaimTypes.NameIdentifier).Value";
            var model = {
                message: message,
                userId: userId,
                callerId: callerId
            }
            connection.invoke("Send", model);
            $("textarea").val("");
            $("textarea").focus();
        });
            
        connection.start();
    </script>

}
